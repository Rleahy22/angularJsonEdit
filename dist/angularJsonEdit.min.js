!function(){"use strict";angular.module("angular-json-edit",[])}(),function(){"use strict";function e(){function e(e){function n(n,r){var t={};t[n]=r,e.collapsed.push(t)}function r(n,r){if(angular.equals(n,r)){for(var t in n){if(!r.hasOwnProperty(t))return console.log("PROP"),!1;if(!angular.equals(n[t],r[t]))return console.log("Value"),!1;if(!e.deepEquals(n[t],r[t]))return!1}for(var o in r)if(!n.hasOwnProperty(o))return!1;return!0}return!1}function t(n,r){e.isArray(r)?r.splice(n,1):delete r[n]}function o(n,r){var t={};t[n]=r,e.collapsed.forEach(function(r,o){e.deepEquals(r[n],t[n])&&e.collapsed.splice(o,1)})}function a(e){return"number"==typeof e?"number":"text"}function s(e){return Array.isArray(e)}function i(n,r){var t={},o=!1;return t[n]=r,e.collapsed.forEach(function(r){e.deepEquals(r[n],t[n])&&(o=!0)}),o}function l(e){return"object"==typeof e?!0:!1}e.collapse=n,e.collapsed=[],e.deepEquals=r,e.deleteProperty=t,e.expand=o,e.getInputType=a,e.isArray=s,e.isCollapsed=i,e.isNested=l,e.nest='<button class="json-delete json-button" ng-click="deleteProperty(key, parent)">&times;</button><div class="label-wrapper" ng-class="{\'padded-row\': !isNested(value)}"><i ng-show="isNested(value) && isCollapsed(key, parent)" class="json-arrow" ng-click="expand(key, parent)">&#8658;</i><i ng-show="isNested(value) && !isCollapsed(key, parent)" class="json-arrow" ng-click="collapse(key, parent)">&#8659;</i><label class="json-form-element"><span class="key-span" ng-hide="isArray(parent)">{{key}}:</span><span ng-show="isNested(value) && isArray(value)"> [</span><span ng-show="isNested(value) && !isArray(value)"> {</span></label><div ng-if="!isNested(value)" class="json-input-div"><input type="{{getInputType(value)}}" name="{{key}}" ng-model="parent[key]" class="json-input" required></div></div><div ng-if="isNested(value)" ng-show="!isCollapsed(key, parent)" class="nested-json"><div ng-repeat="(key, value) in parent[key] track by key" ng-init="parent = child; child = value" class="json-form-row" compile="nest"></div><div json-editor-add-property class="json-new-property padded-row" object="value" newProperty="{}" class="" ng-show="isNested(value)"></div></div><label ng-show="isNested(value)" class="json-form-element padded-row">{{isArray(value) ? \']\' : \'}\'}}</label>'}var n='<div class="json-container"><div class="json-form-div"><form name="jsonEditorForm" ng-submit="" role="form"><div ng-repeat="(key, value) in config track by key" ng-init="parent = config; child = value" class="json-form" compile="nest"</div><div json-editor-add-property class="json-new-property" object="config" newProperty="{}"></div></form></div></div>',r={link:e,template:n,restrict:"EA",scope:{config:"=",showModal:"="}};return r}function n(e){return function(n,r,t){n.$watch(function(e){return e.$eval(t.compile)},function(t){r.html(t),e(r.contents())(n)})}}angular.module("angular-json-edit").directive("jsonEditor",e).directive("compile",n),n.$inject=["$compile"]}(),function(){"use strict";function e(){function e(e){function n(){if(e.isParentArray())switch(e.newProperty.type){case"array":e.object.push([]);break;case"object":e.object.push({});break;case"string":e.object.push(e.newProperty.value||"");break;case"number":e.object.push(parseInt(e.newProperty.value)||0);break;case"boolean":e.object.push(Boolean(e.newProperty.value))}else switch(e.newProperty.type){case"array":e.object[e.newProperty.name]=[];break;case"object":e.object[e.newProperty.name]={};break;case"string":e.object[e.newProperty.name]=e.newProperty.value||"";break;case"number":e.object[e.newProperty.name]=parseInt(e.newProperty.value)||0;break;case"boolean":e.object[e.newProperty.name]=Boolean(e.newProperty.value)}e.newProperty={},e.showForm=!1}function r(){return e.newProperty&&"number"===e.newProperty.type?"number":"text"}function t(){return Array.isArray(e.object)}function o(){return e.newProperty?"string"===e.newProperty.type||"number"===e.newProperty.type||"boolean"===e.newProperty.type:void 0}e.addProperty=n,e.getInputType=r,e.isParentArray=t,e.showValueField=o}var n='<div class="new-property-div padded-row" ng-show="showForm"><input type="text" placeholder="key" name="newPropertyName" ng-model="newProperty.name" ng-show="!isParentArray()"><select name="newPropertyType" ng-model="newProperty.type"><option value="" ng-disabled="true">Type</option><option value="array">Array</option><option value="object">Object</option><option value="string">String</option><option value="number">Number</option><option value="boolean">Boolean</option></select><input type="{{getInputType()}}" class="value-field" placeholder="value" name="newPropertyValue" ng-model="newProperty.value" ng-show="showValueField()"><button class="json-button" ng-click="addProperty()" ng-show="newProperty.type">&#43;</button></div><div class="new-property-button-div" ng-show="!showForm"><button class="json-button padded-row" ng-click="showForm = true">&#43;</button></div>',r={link:e,template:n,restrict:"EA",scope:{object:"=",newProperty:"="}};return r}angular.module("angular-json-edit").directive("jsonEditorAddProperty",e)}();